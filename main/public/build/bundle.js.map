{"version":3,"file":"bundle.js","sources":["../../src/js/traverseTree.js","../../src/js/keybasedTree.js","../../src/js/CreateDemoTree.js","../../src/main.js"],"sourcesContent":["/**\r\n * Code for traversing: \r\n * https://code.tutsplus.com/articles/data-structures-with-javascript-tree--cms-23393 \r\n * \r\n * @param {*} tree - tree to be trafersed\r\n * @param {*} currentNode - current node while recursing\r\n * @param {*} callbackEntering - callback function called before entering the current node\r\n * @param {*} callbackLeaving - callback function called after leaving the current node\r\n * @param {*} level - counts recursion level, may be used by callback functions\r\n */\r\nfunction recurseNode(tree, currentNode, callbackEntering, callbackLeaving, level) {\r\n    callbackEntering(level, currentNode);\r\n    if (currentNode.children) {\r\n        var num_of_children = currentNode.children.length;\r\n        level++;\r\n        for (var i = 0; i < num_of_children; i++) {\r\n            var childKey = currentNode.children[i];\r\n            var child = tree[childKey];\r\n            recurseNode(tree, child, callbackEntering, callbackLeaving, level);\r\n        }\r\n        level--;\r\n    }\r\n    callbackLeaving(level, currentNode);\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} tree -  keybased tree object\r\n * @param {*} callback - function callbackEntering(level, currentNode)\r\n * called when entering current node\r\n */\r\n export function traverseRootToLeafs(tree, callback) {\r\n    var emptyFunc = function () {};\r\n    var currentNode = tree['root'];\r\n    recurseNode(tree, currentNode, callback, emptyFunc, 0);\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} tree -  keybased tree object\r\n * @param {*} callback - function callbackEntering(level, currentNode)\r\n * called when entering current node\r\n */\r\n export function traverseRootToLeafs_EnterLeave(tree, callbackEnter, callbackLeave) {\r\n    var currentNode = tree['root'];\r\n    recurseNode(tree, currentNode, callbackEnter, callbackLeave, 0);\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} tree -  keybased tree object\r\n * @param {*} callback - function callbackLeaving(level, currentNode)\r\n * called when leaving current node\r\n */\r\n export function traverseLeafsToRoot(tree, callback) {\r\n    var emptyFunc = function () {};\r\n    // var emptyFunc = null; //causes TypeError\r\n    var currentNode = tree['root'];\r\n    recurseNode(tree, currentNode, emptyFunc, callback, 0);\r\n}","import {\r\n    traverseRootToLeafs,\r\n    traverseLeafsToRoot,\r\n    traverseRootToLeafs_EnterLeave\r\n} from './traverseTree.js';\r\n\r\n// variable tree has to be definde outside of createTree to have access to createNode\r\nvar tree = {\r\n    addNode: function (parentKey, newContent) {\r\n        if (parentKey) {\r\n            return createNode(this, parentKey, newContent);\r\n        } else {\r\n            var msg = 'parentKey undefined or null';\r\n            return {\r\n                result: msg,\r\n                node: undefined\r\n            };\r\n        }\r\n    },\r\n    insertOver: function (key, newContent) {\r\n        return insertNodeOver(this, key, newContent);\r\n    },\r\n    remove: function (key) {\r\n        var node = removeNode(this, key);\r\n        if (node === undefined) {\r\n            node = {\r\n                content: 'nothing'\r\n            };\r\n        }\r\n        return node;\r\n    },\r\n\r\n    /**\r\n     * \r\n     * @param {function(level, currentNode)} callback - function applied to current node while traversing the tree\r\n     */\r\n    fromRootToLeafs: function (callback) {\r\n        traverseRootToLeafs(this, callback);\r\n    },\r\n    fromRootToLeafs_EnterLeave: function (callbackEnter, callbackLeave) {\r\n        traverseRootToLeafs_EnterLeave(this, callbackEnter, callbackLeave);\r\n    },\r\n    /**\r\n     * \r\n     * @param {function(level, currentNode)} callback - function applied to current node while traversing the tree\r\n     */\r\n    fromLeafsToRoot: function (callback) {\r\n        traverseLeafsToRoot(this, callback);\r\n    }\r\n};\r\n\r\n/**\r\n * creates a tree object with one node: the root node\r\n * @param {*} rootcontent - the content of the new root node\r\n * @returns tree object consisting of root node \r\n */\r\nexport function createTree(rootcontent) {\r\n    // newTree inherits methods of tree object \r\n    var newTree = Object.create(tree);\r\n    var rootNode = {\r\n        key: 'root',\r\n        parentKey: null,\r\n        children: [],\r\n        content: rootcontent,\r\n        // isLeaf: function () {\r\n        //     return (this.children.length === 0);\r\n        // }\r\n    }\r\n    newTree['root'] = rootNode;\r\n    return newTree;\r\n}\r\n\r\nexport function createTreeFromJson(jsonTree) {\r\n    // enhance jsonTree with methods of tree\r\n    // https://medium.com/swlh/ellipses-three-dots-or-three-periods-in-javascript-a-primer-to-the-spread-operator-4993984591f5\r\n    return {\r\n        ...jsonTree,\r\n        ...tree\r\n    };\r\n}\r\n\r\n\r\n\r\n/**\r\n * \r\n * @param {*} tree - tree to which node will be added\r\n * @param {*} parentKey - key of parent of the new node\r\n * @param {*} newContent - content of the new node\r\n * @returns the new node or null, if parent key not found in tree\r\n */\r\nfunction createNode(tree, parentKey, newContent) {\r\n    var parent = tree[parentKey];\r\n    if (parent) {\r\n        var newKey = nonexistingRandomKey(tree, 3);\r\n        var newNode = {\r\n            key: newKey,\r\n            parentKey: parentKey,\r\n            children: [],\r\n            content: newContent,\r\n            // isLeaf: function () {\r\n            //     return (this.children.length === 0);\r\n            // }\r\n        };\r\n        tree[newKey] = newNode;\r\n        parent.children = [...(parent.children || []), newNode.key];\r\n        return {\r\n            result: 'OK',\r\n            node: newNode\r\n        };\r\n    } else {\r\n        var msg = 'unknown parent key: ' + parentKey;\r\n        return {\r\n            result: msg,\r\n            node: undefined\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} tree - tree to which node will be added\r\n * @param {*} key - key of node where newNode will be inserted over\r\n * @param {*} newContent - content of the new node\r\n * @returns the new node\r\n */\r\nfunction insertNodeOver(tree, key, newContent) {\r\n    var node = tree[key];\r\n    if (!node) {\r\n        var msg = \"node with key \" + key + \"doesn't exist\";\r\n        return {\r\n            result: msg,\r\n            node: undefined\r\n        };\r\n    }\r\n    var parent = tree[node.parentKey];\r\n    if (parent) {\r\n        var newKey = nonexistingRandomKey(tree, 3);\r\n        var newNode = {\r\n            key: newKey,\r\n            parentKey: node.parentKey,\r\n            children: [node.key],\r\n            content: newContent,\r\n            // isLeaf: function () {\r\n            //     return (this.children.length === 0);\r\n            // }\r\n        };\r\n        var childIndex = parent.children.indexOf(node.key);\r\n        parent.children[childIndex] = newKey;\r\n        tree[newKey] = newNode;\r\n        return {\r\n            result: 'OK',\r\n            node: newNode\r\n        };\r\n    } else {\r\n        msg = 'unknown parent key: ' + node.parentKey;\r\n        return {\r\n            result: msg,\r\n            node: undefined\r\n        };\r\n    }\r\n}\r\n\r\nfunction removeNode(tree, key) {\r\n    var node = tree[key];\r\n    if (node) {\r\n        console.log(node.key, 'has children', node.children);\r\n        // TODO necessary? if(node.children && node.children.length > 0){}\r\n        var parent, childIndex, node_clone, msg;\r\n        switch (node.children.length) {\r\n            case 0:\r\n                // no children\r\n                parent = tree[node.parentKey];\r\n                if (parent) {\r\n                    childIndex = parent.children.indexOf(key);\r\n                    // remove key from array of children of parent\r\n                    parent.children.splice(childIndex);\r\n                    node_clone = JSON.parse(JSON.stringify(node));\r\n                    delete tree[key];\r\n                    return {\r\n                        result: 'OK',\r\n                        node: node_clone\r\n                    };\r\n                } else {\r\n                    msg = 'root cannot be removed';\r\n                    return {\r\n                        result: msg,\r\n                        node: undefined\r\n                    };\r\n                }\r\n                // return {\r\n                //     result: 'OK', node: node\r\n                // };\r\n                case 1:\r\n                    // exactly one child\r\n                    parent = tree[node.parentKey];\r\n                    if (parent) {\r\n                        childIndex = parent.children.indexOf(key);\r\n                        var grandchildKey = node.children[0];\r\n                        var grandchild = tree[grandchildKey];\r\n                        // replace key of child with key of grandchild in array of children of parent\r\n                        parent.children[childIndex] = grandchildKey;\r\n                        // replace parentKey of grandchild with parentKey of node\r\n                        grandchild.parentKey = node.parentKey;\r\n                        node_clone = JSON.parse(JSON.stringify(node));\r\n                        delete tree[key];\r\n                        return {\r\n                            result: 'OK',\r\n                            node: node_clone\r\n                        };\r\n                    } else {\r\n                        msg = 'root cannot be removed';\r\n                        return {\r\n                            result: msg,\r\n                            node: undefined\r\n                        };\r\n                    }\r\n                    // return node; //no break necessary\r\n                    default:\r\n                        // more than one child\r\n                        msg = 'node with more than one child cannot be removed';\r\n                        return {\r\n                            result: msg,\r\n                                node: undefined\r\n                        };\r\n        }\r\n        // console.log(tree);\r\n\r\n    } else {\r\n        msg = 'node with key' + key + ' does not exist';\r\n        return {\r\n            result: msg,\r\n            node: undefined\r\n        };\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} length - length of key to be generated\r\n * @returns {string} - consists of chars randomly picked from 'characters'\r\n */\r\nfunction randomKey(length) {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\r\n    // var characters = 'abc'; //for test\r\n    var numOfChars = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n        result += characters.charAt(Math.floor(Math.random() * numOfChars));\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction nonexistingRandomKey(tree, length) {\r\n    const numOfTries = 10;\r\n    // const numOfTries = 5; // for test\r\n    var existingKeys = Object.keys(tree);\r\n    // console.log('existingKeys', existingKeys);\r\n    var newKey = null;\r\n    for (var i = 0; i < numOfTries; i++) {\r\n        var candidate = randomKey(length);\r\n        if (existingKeys.indexOf(candidate) === -1) {\r\n            // candidate is no existing key\r\n            newKey = candidate;\r\n            i = numOfTries; // short circuit\r\n        } else {\r\n            // no new key found; try again\r\n            console.warn('try number', i, 'not successful:', candidate, 'exists');\r\n        }\r\n    }\r\n    if (newKey === null) {\r\n        throw 'no new key found';\r\n    }\r\n    return newKey;\r\n}","/* eslint-disable no-unused-vars */\r\nimport {\r\n    createTree\r\n} from './keybasedTree.js';\r\n\r\n/**\r\n * create a tree for test purposes (e.g. traversing)\r\n * using addNode\r\n */\r\nexport function demoTree() {\r\n    var tree = createTree('Demo Tree');\r\n    var w = tree.addNode(\"root\", \"content-W\").node;\r\n    var y = tree.addNode(\"root\", \"content-Y\").node;\r\n    var a1 = tree.addNode(w.key, \"content-R\").node;\r\n    // var a1 = tree.addNode(w.key, \"content-A\").node; //for demo: double content is allowed\r\n    var s = tree.addNode(w.key, \"content-S\").node;\r\n    var e = tree.addNode(w.key, \"content-E\").node;\r\n    var t = tree.addNode(s.key, \"content-T\").node;\r\n    var a2 = tree.addNode(y.key, \"content-A\").node;\r\n    var c = tree.addNode(y.key, \"content-C\").node;\r\n    // removing nodes -testcase\r\n    // var response;\r\n    // response=tree.remove('dummy-key');\r\n    // if (response.result === 'OK') {\r\n    //     console.log('removed:', response.node.content);\r\n    // } else {\r\n    //     console.log('error:', response.result);\r\n    // }\r\n    // response=tree.remove(s.key);\r\n    // if (response.result === 'OK') {\r\n    //     console.log('removed:', response.node.content);\r\n    // } else {\r\n    //     console.log('error:', response.result);\r\n    // }\r\n    // response=tree.remove(e.key);\r\n    // if (response.result === 'OK') {\r\n    //     console.log('removed:', response.node.content);\r\n    // } else {\r\n    //     console.log('error:', response.result);\r\n    // }\r\n    // response=tree.remove('root');\r\n    // if (response.result === 'OK') {\r\n    //     console.log('removed:', response.node.content);\r\n    // } else {\r\n    //     console.log('error:', response.result);\r\n    // }\r\n    // response=tree.remove(y.key);\r\n    // if (response.result === 'OK') {\r\n    //     console.log('removed:', response.node.content);\r\n    // } else {\r\n    //     console.log('error:', response.result);\r\n    // }\r\n    // insertOver - testcase\r\n    var k = tree.insertOver(c.key, 'Insert-K').node;\r\n    console.log('inserted:', k);\r\n    var b = tree.insertOver(t.key, 'Insert-B').node;\r\n    console.log('inserted:', b);\r\n    return tree;\r\n}","\"use strict\";\r\n// \r\n\r\nimport config from \"./js/config.json\";\r\nimport {createTree, createTreeFromJson} from './js/keybasedTree.js';\r\nimport {demoTree} from './js/CreateDemoTree.js';\r\nimport {version} from '../package.json';\r\n\r\n// after import of bundle, using <script src='build/bundle.js'></script>,\r\n// the bridge object with the following exports is available, e.g. using <script> in HTML\r\nexport {\r\n    config,\r\n    createTree,\r\n    createTreeFromJson,\r\n    version,\r\n    demoTree\r\n};\r\n\r\nwindow.onload = function () {\r\n    console.log('version (from package.json) ', version);\r\n    // var newTree = demoTree();\r\n    // console.log(newTree);\r\n};\r\n\r\nexport function mainIsLoaded() {\r\n    return true;\r\n}"],"names":[],"mappings":"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"}