{"version":3,"file":"bundle.js","sources":["../../src/js/keybasedTree.js","../../src/main.js"],"sourcesContent":["export var tree;\r\n\r\nfunction node(content) {\r\n    this.parentKey = null;\r\n    this.children = [];\r\n    this.isLeaf = (this.children.length === 0);\r\n    this.content = content;\r\n}\r\n\r\ntree = {\r\n    'root': new node('rootcontent'),\r\n    addNode: function (parentKey, newContent) {\r\n        return createNode(this, parentKey, newContent);\r\n    }\r\n};\r\n\r\nfunction createNode(tree, parentKey, newContent) {\r\n    // console.log('add node with content ' + newContent + ' to parent with key ' + parentKey);\r\n    var parent = tree[parentKey];\r\n    if (parent) {\r\n        var newKey = randomKey(10);\r\n        var newNode = {\r\n            key: newKey,\r\n            content: newContent,\r\n            parentKey: parentKey\r\n        };\r\n        tree[newKey] = newNode;\r\n        parent.children = [...(parent.children || []), newNode.key]\r\n        return newNode;\r\n    } else {\r\n        console.log('unknown parent key: ', parentKey);\r\n        return null;\r\n    }\r\n}\r\n// console.log(tree);\r\n\r\nfunction randomKey(length) {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\r\n    var numOfChars = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n        result += characters.charAt(Math.floor(Math.random() * numOfChars));\r\n    }\r\n    return result;\r\n}","\"use strict\";\r\n// \r\n\r\nimport config from \"./js/config.json\";\r\nimport {version} from '../package.json';\r\nimport {tree} from './js/keybasedTree.js';\r\n\r\n// after import of bundle, using <script src='build/bundle.js'></script>,\r\n// the bridge object with the following exports is available, e.g. using <script> in HTML\r\nexport {\r\n    config,\r\n    tree,\r\n    version\r\n};\r\n\r\nwindow.onload = function () {\r\n    console.log('version (from package.json) ', version);\r\n};\r\n\r\nexport function mainIsLoaded() {\r\n    return true;\r\n}"],"names":["tree"],"mappings":";;;;;;;;;;;;AAAWA,0BAAK;AAChB;IACA,SAAS,IAAI,CAAC,OAAO,EAAE;IACvB,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;IAC1B,IAAI,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACvB,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC;IAC/C,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;AACD;AACAA,gBAAI,GAAG;IACP,IAAI,MAAM,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC;IACnC,IAAI,OAAO,EAAE,UAAU,SAAS,EAAE,UAAU,EAAE;IAC9C,QAAQ,OAAO,UAAU,CAAC,IAAI,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;IACvD,KAAK;IACL,CAAC,CAAC;AACF;IACA,SAAS,UAAU,CAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE;IACjD;IACA,IAAI,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC;IACjC,IAAI,IAAI,MAAM,EAAE;IAChB,QAAQ,IAAI,MAAM,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;IACnC,QAAQ,IAAI,OAAO,GAAG;IACtB,YAAY,GAAG,EAAE,MAAM;IACvB,YAAY,OAAO,EAAE,UAAU;IAC/B,YAAY,SAAS,EAAE,SAAS;IAChC,SAAS,CAAC;IACV,QAAQ,IAAI,CAAC,MAAM,CAAC,GAAG,OAAO,CAAC;IAC/B,QAAQ,MAAM,CAAC,QAAQ,GAAG,CAAC,IAAI,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAC,EAAE,OAAO,CAAC,GAAG,EAAC;IACnE,QAAQ,OAAO,OAAO,CAAC;IACvB,KAAK,MAAM;IACX,QAAQ,OAAO,CAAC,GAAG,CAAC,sBAAsB,EAAE,SAAS,CAAC,CAAC;IACvD,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;IACL,CAAC;IACD;AACA;IACA,SAAS,SAAS,CAAC,MAAM,EAAE;IAC3B,IAAI,IAAI,MAAM,GAAG,EAAE,CAAC;IACpB,IAAI,IAAI,UAAU,GAAG,kEAAkE,CAAC;IACxF,IAAI,IAAI,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC;IACvC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;IACrC,QAAQ,MAAM,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,UAAU,CAAC,CAAC,CAAC;IAC5E,KAAK;IACL,IAAI,OAAO,MAAM,CAAC;IAClB;;IC7BA,MAAM,CAAC,MAAM,GAAG,YAAY;IAC5B,IAAI,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,OAAO,CAAC,CAAC;IACzD,CAAC,CAAC;AACF;IACO,SAAS,YAAY,GAAG;IAC/B,IAAI,OAAO,IAAI,CAAC;IAChB;;;;;;;;;;;;;;"}