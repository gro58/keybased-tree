{"version":3,"file":"bundle.js","sources":["../../src/js/traverseTree.js","../../src/js/keybasedTree.js","../../src/js/CreateDemoTree.js","../../src/main.js"],"sourcesContent":["/**\r\n * \r\n * @param {*} tree - tree to be trafersed\r\n * @param {*} currentNode - current node while recursing\r\n * @param {*} callbackEntering - callback function called before entering the current node\r\n * @param {*} callbackLeaving - callback function called after leaving the current node\r\n * @param {*} level - counts recursion level, may be used by callback functions\r\n */\r\nfunction recurseNode(tree, currentNode, callbackEntering, callbackLeaving, level) {\r\n    callbackEntering(level, currentNode);\r\n    if (currentNode.children) {\r\n        var num_of_children = currentNode.children.length;\r\n        level++;\r\n        for (var i = 0; i < num_of_children; i++) {\r\n            var childKey = currentNode.children[i];\r\n            var child = tree[childKey];\r\n            recurseNode(tree, child, callbackEntering, callbackLeaving, level);\r\n        }\r\n        level--;\r\n    }\r\n    callbackLeaving(level, currentNode);\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} tree -  keybased tree object\r\n * @param {*} callback - function callbackEntering(level, currentNode)\r\n * called when entering current node\r\n */\r\nexport function traverseRootToLeafs(tree, callback) {\r\n    var emptyFunc = function () {};\r\n    var currentNode = tree['root'];\r\n    recurseNode(tree, currentNode, callback, emptyFunc, 0);\r\n}","import {traverseRootToLeafs} from './traverseTree.js';\r\n/**\r\n * default node structure\r\n * @param {string|*} content - the content of the new created node, maybe a string or an object\r\n * parent and children are represented by their keys or array of keys\r\n * use of keys is preferred to use of references to parent nodes or child nodes\r\n * use of keys avoids problems with e.g. circular dependencies if using JSON.stringify\r\n */\r\nfunction node(content) {\r\n    this.parentKey = null;\r\n    this.children = [];\r\n    this.isLeaf = (this.children.length === 0);\r\n    this.content = content;\r\n    this.key = 'dummy key'; //overwritten in createTree\r\n}\r\n\r\n// variable tree has to be outside of createTree to have access to createNode\r\nvar tree = {\r\n    'root': new node('dummy rootcontent'), //overwritten in createTree\r\n    addNode: function (parentKey, newContent) {\r\n        return createNode(this, parentKey, newContent);\r\n    },\r\n    /**\r\n     * \r\n     * @param {function(level, currentNode)} callback - function applied to current node while traversing the tree\r\n     */\r\n    fromRootToLeaf: function(callback){\r\n        traverseRootToLeafs(this, callback);\r\n    }\r\n};\r\n\r\n/**\r\n * creates a tree object with one node: the root node\r\n * @param {*} rootcontent - the content of the new root node\r\n * @returns tree object consisting of root node \r\n */\r\nexport function createTree(rootcontent){\r\n    var newTree = Object.create(tree);\r\n    newTree.root.content = rootcontent;\r\n    newTree.root.key = 'root';\r\n    return newTree;\r\n}\r\n\r\n/**\r\n * \r\n * @param {*} tree - tree to which node will be added\r\n * @param {*} parentKey - key of parent of the new node\r\n * @param {*} newContent - content of the new node\r\n * @returns the new node or null, if parent key not found in tree\r\n */\r\nfunction createNode(tree, parentKey, newContent) {\r\n    // console.log('add node with content ' + newContent + ' to parent with key ' + parentKey);\r\n    var parent = tree[parentKey];\r\n    if (parent) {\r\n        var newKey = randomKey(6);\r\n        var newNode = {\r\n            key: newKey,\r\n            content: newContent,\r\n            parentKey: parentKey\r\n        };\r\n        tree[newKey] = newNode;\r\n        parent.children = [...(parent.children || []), newNode.key]\r\n        return newNode;\r\n    } else {\r\n        console.log('unknown parent key: ', parentKey);\r\n        return null;\r\n    }\r\n}\r\n// console.log(tree);\r\n\r\nfunction randomKey(length) {\r\n    var result = '';\r\n    var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_';\r\n    var numOfChars = characters.length;\r\n    for (var i = 0; i < length; i++) {\r\n        result += characters.charAt(Math.floor(Math.random() * numOfChars));\r\n    }\r\n    return result;\r\n}","/* eslint-disable no-unused-vars */\r\nimport {\r\n    createTree\r\n} from './keybasedTree.js';\r\n\r\n/**\r\n * create a tree for test purposes (e.g. traversing)\r\n * using addNode\r\n */\r\nexport function demoTree() {\r\n    var tree = createTree('Demo Tree');\r\n    var w = tree.addNode(\"root\", \"content-W\");\r\n    var y = tree.addNode(\"root\", \"content-Y\");\r\n    var a1 = tree.addNode(w.key, \"content-A\");\r\n    var s = tree.addNode(w.key, \"content-S\");\r\n    var e = tree.addNode(w.key, \"content-E\");\r\n    var t = tree.addNode(s.key, \"content-T\");\r\n    var a2 = tree.addNode(y.key, \"content-A\");\r\n    var c = tree.addNode(y.key, \"content-C\");\r\n    return tree;\r\n}","\"use strict\";\r\n// \r\n\r\nimport config from \"./js/config.json\";\r\nimport {createTree} from './js/keybasedTree.js';\r\nimport {demoTree} from './js/CreateDemoTree.js';\r\nimport {version} from '../package.json';\r\n\r\n// after import of bundle, using <script src='build/bundle.js'></script>,\r\n// the bridge object with the following exports is available, e.g. using <script> in HTML\r\nexport {\r\n    config,\r\n    createTree,\r\n    version,\r\n    demoTree\r\n};\r\n\r\nwindow.onload = function () {\r\n    console.log('version (from package.json) ', version);\r\n    // var newTree = demoTree();\r\n    // console.log(newTree);\r\n};\r\n\r\nexport function mainIsLoaded() {\r\n    return true;\r\n}"],"names":[],"mappings":"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"}